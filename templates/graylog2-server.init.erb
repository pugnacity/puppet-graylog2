#! /bin/sh
### BEGIN INIT INFO
# Provides:          graylog2-server
# Required-Start:    $all
# Required-Stop:     $all
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts graylog2-server
# Description:       Starts graylog2-server using start-stop-daemon
### END INIT INFO

GLS_HOME=<%= scope.lookupvar('graylog2::installdir') %>/graylog2-server-<%= scope.lookupvar('graylog2::version') %>
DAEMON="<%= scope.lookupvar('graylog2::java_path') %>"
DAEMON_OPTS=" -jar $GLS_HOME/graylog2-server.jar"
NAME=graylog2-server
DESC=graylog2-server
PID_FILE=/tmp/graylog2.pid
LOG_DIR=/var/log/$NAME
NOHUP=`which nohup`

if [ `id -u` -ne 0 ]; then
        echo "You need root privileges to run this script"
        exit 1
fi


. /lib/lsb/init-functions

if [ -r /etc/default/rcS ]; then
        . /etc/default/rcS
fi


test -x $DAEMON || exit 0

set -e

case "$1" in
  start)
    echo -n "Starting $DESC: "
    cd /tmp
    $NOHUP $DAEMON $DAEMON_OPTS | logger -t graylog2 2>&1 &
    ;;
  stop)
    echo "Stopping $DESC: "
    pkill -f graylog2-server.jar
    ;;
  status)
        set +e
        start-stop-daemon --status --pidfile "$PID_FILE" >/dev/null 2>&1
        if [ "$?" != "0" ]; then
                if [ -f "$PID_FILE" ]; then
                    log_success_msg "$DESC is not running, but pid file exists."
                        exit 1
                else
                    log_success_msg "$DESC is not running."
                        exit 3
                fi
        else
                log_success_msg "$DESC is running with pid `cat $PID_FILE`"
        fi
        set -e
    ;;
  restart|force-reload)
    ${0} stop
    sleep 0.5
    ${0} start
    ;;
  *)
    N=/etc/init.d/$NAME
    echo "Usage: $N {start|stop|restart|force-reload}" >&2
    exit 1
    ;;
esac

exit 0
